// #barSurfer[hidden],
#simpleSlider[hidden],
#inputSurfer[hidden],
#barSurfer[hidden] ::part(wrapper),
#barSurfer>div.mdl-slider-background-flex-container,
#barSurfer>input.nowPlayingBarPositionSlider,
#barSurfer>div.sliderBubbleTrack {
    display: none;
}

#barSurfer[hidden]>div.mdl-slider-background-flex-container,
#barSurfer[hidden]>input.nowPlayingBarPositionSlider,
#barSurfer[hidden]>div.sliderBubbleTrack {
    display: unset;
}

#barSurfer ::part(wrapper) {
    display: block;
    width: 100vw;
}

#barSurfer ::part(cursor) {
    border-radius: 10px;
    ;
}

#inputSurfer,
#simpleSlider {
    height: 6rem;
    margin-bottom: 2rem;
    margin-top: 0rem;
    max-width: 85vw;
}

.nowPlayingVolumeSliderContainer {
    flex: 1;
    flex-wrap: nowrap;
}

.volumecontrol.hide {
    display: flex;
    flex: 1;
    flex-wrap: nowrap;
}


@media (min-width: 690px) {

    #inputSurfer {
        height: 5rem;
        margin-bottom: 1rem;
        margin-top: -0.5rem;
        max-width: 75vw;
    }

    #simpleSlider {
        height: 2rem;
        margin-bottom: 0rem;
        margin-top: 1rem;
        max-width: 75vw;
    }
}

@media (min-width: 1600px) {

    #inputSurfer,
    #simpleSlider {
        height: 38px;
        margin: 0;
        position: fixed;
        left: 0;
        right: 0;
        max-width: 100vw;
        bottom: 1.5rem;
    }

    #simpleSlider {
        padding-left: 5rem;
        padding-right: 5rem;
    }
}


.nowPlayingInfoContainer {
    height: calc(98% - 4.2em);
}

#reactRoot>canvas {
    position: fixed;
}


@media(min-width:1600px) {
    .backgroundContainer.withBackdrop {
        opacity: 0.8;
        transition: opacity 2s ease-in-out;
        // background-color: rgb(0 0 0 / 12%);
        // background-image: none;
    }

    #playlist>div:hover>div.listViewUserDataButtons,
    #playlist>div:hover>span {
        opacity: 1;
    }

    #playlist>div>div.listViewUserDataButtons,
    #playlist>div>span {
        opacity: 0;
    }

    .nowPlayingInfoControls>.infoContainer,
    .nowPlayingInfoContainer>.nowPlayingPageImageContainer {
        opacity: 1;
        transition: opacity 2s ease-in-out;
    }

    body.mouseIdle .nowPlayingInfoControls>.infoContainer,
    body.mouseIdle .nowPlayingInfoContainer>.nowPlayingPageImageContainer {
        opacity: 0;
        transition: opacity 7s ease-out;
    }

    body.mouseIdle .backgroundContainer.withBackdrop {
        opacity: 0.2;
        transition: opacity 2s ease-in-out;
    }

    .nowPlayingInfoContainer {
        height: unset;
    }

    .volumecontrol.hide {
        display: unset;
        flex: unset;
    }

    .playlist.vertical-list.nowPlayingPlaylist.hide {
        display: flex;
    }


    .itemsContainer-tv>.squareCard,
    .itemsContainer>.squareCard {
        width: calc(100%/5);
    }

    body.mouseIdle .skinHeader {
        opacity: 0.001;
        transition: opacity 2s ease-in-out;
    }

    .listItemImage,
    #playlist>div>div.listItemImage.itemAction.lazy {
        opacity: 0;
        animation: none;
    }

    body.mouseIdle .playlistSection {
        width: 16.5rem;
        opacity: 1;
        direction: rtl;
    }

    div.playlistSection {
        bottom: 12rem;
        font-size: .8em;
        padding: 1.5rem;
        padding-left: 2.5rem;
        padding-right: 2rem;
        padding-top: 2.5rem;
        position: fixed;
        right: 0;
        width: 32rem;
        scrollbar-width: none;
        top: 10rem;
        max-height: 100vh;
        overflow: auto;
    }

    .nowPlayingInfoContainer>.nowPlayingPageImageContainer {
        width: 400px;
        margin-right: 3rem;
    }

    .mediaInfoItem {
        min-width: 1.5rem;
    }

    .listItem.listItem-border {
        border: none !important;
        border-style: none !important;
        border-color: rgb(255 255 255 / 0%) !important;
    }

    .nowPlayingInfoContainer>.nowPlayingInfoControls {
        justify-content: flex-end;
    }

    .nowPlayingInfoContainerMedia {
        margin-bottom: 0;
    }

    body::-webkit-scrollbar,
    body.mouseIdle .nowPlayingInfoContainer>.nowPlayingInfoControls>.nowPlayingButtonsContainer,
    body.mouseIdle .playlistSection>div.playlistSectionButton,
    body.mouseIdle .listViewUserDataButtons,
    body.mouseIdle .listViewDragHandle.material-icons.listItemIcon.drag_handle,
    body.mouseIdle .remoteControlSection {
        display: none;
    }

    html {
        scrollbar-width: none;
    }

    .nowPlayingInfoContainer {
        position: fixed;
        max-width: 70rem;
        bottom: 4rem;
        left: 5rem;
    }

    .sliderContainer.flex {
        position: fixed;
        bottom: 1rem;
        left: 2.8rem;
        right: 2.8rem;
        font-size: 0.6em;
    }

    #playlist>button {
        height: 1.5rem;
    }

    .listItemImage.playlistIndexIndicatorImage {
        background-size: 2em !important;
        bottom: 0.3em;
        opacity: unset;
    }

    .listItemBodyText {
        margin: 0;
        overflow: hidden;
        padding: .1em 0;
        text-overflow: ellipsis;
        white-space: pre;
        direction: ltr;
    }
}

@media (min-width: 1600px) {
    #reactRoot>canvas {
        position: fixed;
        transform: rotate(-90deg);
        right: 0;
        bottom: -39vh;
        width: 100vh;
        height: 100vw;
    }
}

// @media (min-width: 12910px) { EXPERIMENTAL

//     #inputSurfer {
//         bottom: 29vh;
//         left: 59vw;
//         right: 0vw;
//         height: 30rem;
//         margin: 0px;
//         position: fixed;
//         transform: rotate(90deg);
//         width: 101vh;
//     }
// }